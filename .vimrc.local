" This file will be loaded at the end of .vimrc.
" This file is designed to add your own vim scripts or override the exVim's .vimrc settings.

if WINDOWS()
    if has('multi_byte')
        set termencoding=cp950
        set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15,latin1
    endif
else
    silent! exec 'language zh_TW.utf8'
endif

" Customize
set fileencodings=ucs-bom,utf-8,big5,latin1
" set fileencodings=ucs-bom,utf-8,utf-16le,big5,cp950,cp1252

set cindent shiftwidth=4 " set cindent on to autoinent when editing c/c++ file, with 4 shift width
set tabstop=4 " set tabstop to 4 characters

"map <C-n> :NERDTreeToggle<CR>
nnoremap <F3> :NERDTreeToggle<CR>

" color scheme define
if has("gui_running")
    " silent exec "colorscheme ex"
    silent! exec "colorscheme ex_lightgray"
    augroup ex_gui_font
        " check and determine the gui font after GUIEnter.
        " NOTE: getfontname function only works after GUIEnter.
        au!
        au GUIEnter * call s:set_my_gui_font()
    augroup END
    " set guifont
    function! s:set_my_gui_font()
        if has('gui_gtk2')
            if getfontname( 'Inconsolata' ) != ''
                set guifont=Inconsolata\ 12
            endif
        endif
    endfunction
else " if we are in terminal mode
    " NOTE: you cannot use if has('mac') to detect platform in terminal mode.
    " silent exec "colorscheme darkblue"
    " silent exec "colorscheme default"

    " silent exec "colorscheme materialtheme"
    " silent exec "colorscheme materialtheme"

    " https://github.com/kristijanhusak/vim-hybrid-material
    " silent! exec "colorscheme hybrid_material"
    silent! exec "colorscheme hybrid"
    " let g:hybrid_custom_term_colors=1
    " let g:hybrid_reduced_contrast=1
endif

" For mutt
au BufRead /tmp/mutt-* set tw=72

" Remove unwanted spaces
" From http://vim.wikia.com/wiki/Remove_unwanted_spaces
nnoremap <silent> <leader>ts :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

" PHP auto indent
if !exists("g:phpcbf_command")
    let g:phpcbf_command = "phpcbf"
endif
function! RunPHPCBF()
    silent !clear
    execute "!" . g:phpcbf_command . " " . bufname("%")
endfunction
autocmd FileType php map <buffer> <F7> :call RunPHPCBF()<CR>

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

let g:ultisnips_python_style="google"

" autocmd FileType python nnoremap <leader>= :0,$!yapf<CR>
" autocmd FileType python nnoremap <leader>is :!isort %<CR><CR>
"autocmd FileType python BracelessEnable +indent +fold
autocmd FileType python BracelessEnable +fold
